---
# Role: ingress_externalip_longhorn_check
# Purpose: Patch ingress-nginx Controller Service with externalIPs (master public IP)
#          and verify Longhorn installation namespace presence.

- name: Ensure kubectl is available
  ansible.builtin.command: kubectl version --client
  register: _kubectl_check
  changed_when: false

- name: Fail if kubectl is not available on master
  ansible.builtin.fail:
    msg: "kubectl is not available on the master node"
  when: _kubectl_check.rc != 0

- name: Set KUBECONFIG environment for subsequent shell/command tasks
  ansible.builtin.set_fact:
    _env_kube:
      KUBECONFIG: "{{ kubeconfig_path }}"

- name: Determine external IP (fallback to master ansible_host)
  ansible.builtin.set_fact:
    _external_ip_effective: "{{ external_ip if (external_ip | length) > 0 else (hostvars[groups['k8s_master'][0]].ansible_host | default('')) }}"

- name: Patch ingress controller Service with externalIPs (idempotent)
  ansible.builtin.shell: |
    set -e
    if [ -n "{{ _external_ip_effective }}" ]; then
      kubectl -n {{ ingress_namespace }} patch svc {{ ingress_service_name }} \
        --type merge \
        -p '{"spec":{"externalIPs":["{{ _external_ip_effective }}"]}}'
      echo "Added externalIPs [{{ _external_ip_effective }}] to {{ ingress_service_name }}"
    else
      echo "No external IP available (external_ip var empty and ansible_host missing). Skipping patch."
    fi
  environment: "{{ _env_kube }}"
  register: _svc_patch
  changed_when: '"Added externalIPs" in _svc_patch.stdout'
  failed_when: false

- name: Show ingress controller Service summary
  ansible.builtin.shell: kubectl -n {{ ingress_namespace }} get svc {{ ingress_service_name }} -o wide
  environment: "{{ _env_kube }}"
  register: _svc_summary
  changed_when: false
  failed_when: false

- name: Check Longhorn namespace presence
  when: ensure_longhorn_ns_check | bool
  block:
    - name: Get Longhorn namespace
      ansible.builtin.shell: kubectl get ns {{ longhorn_namespace }} -o name 2>/dev/null || echo "not-found"
      environment: "{{ _env_kube }}"
      register: _longhorn_ns
      changed_when: false

    - name: Report Longhorn namespace status
      ansible.builtin.debug:
        msg:
          - "Longhorn namespace status: {{ _longhorn_ns.stdout }}"
          - "Hint: If 'not-found', run full deploy (k8s/deploy-ajasta.yml) to install Longhorn before deploying stateful workloads."

- name: Output summary
  ansible.builtin.debug:
    msg:
      - "Ingress Service patched with externalIPs (if IP known): {{ _external_ip_effective | default('') }}"
      - "Service summary:"
      - "{{ _svc_summary.stdout_lines | default(['n/a']) }}"
      - "Longhorn namespace check performed: {{ ensure_longhorn_ns_check | bool }}"
