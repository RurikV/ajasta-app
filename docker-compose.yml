---
services:
  # PostgreSQL Database
  ajasta-postgres:
    image: postgres:16-alpine
    container_name: ajasta-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ajastadb}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-adminpw}
    ports:
      - "${POSTGRES_PORT:-15432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ajasta-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin} \
        -d ${POSTGRES_DB:-ajastadb}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Spring Boot Backend API
  ajasta-backend:
    image: ${DOCKERHUB_USER:-vladimirryrik}/ajasta-backend:alpine
    container_name: ajasta-backend
    restart: unless-stopped
    depends_on:
      ajasta-postgres:
        condition: service_healthy
    environment:
      # Database Configuration
      DB_URL: jdbc:postgresql://ajasta-postgres:5432/${POSTGRES_DB:-ajastadb}
      DB_USERNAME: ${POSTGRES_USER:-admin}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-adminpw}

      # Application Configuration
      JWT_SECRET: ${JWT_SECRET:-change-me-production-secret-key}

      # Mail Configuration (optional)
      MAIL_USERNAME: ${MAIL_USERNAME:-}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-}

      # AWS Configuration (optional)
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET:-}

      # Stripe Configuration (optional)
      STRIPE_PUBLIC_KEY: ${STRIPE_PUBLIC_KEY:-}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}

      # JVM Configuration
      JAVA_OPTS: ${JAVA_OPTS:--XX:+UseContainerSupport \
        -XX:MaxRAMPercentage=75.0}
    ports:
      - "${BACKEND_PORT:-8090}:8090"
    networks:
      - ajasta-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8090/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Frontend (Nginx)
  ajasta-frontend:
    image: ${DOCKERHUB_USER:-vladimirryrik}/ajasta-frontend:alpine
    container_name: ajasta-frontend
    restart: unless-stopped
    depends_on:
      ajasta-backend:
        condition: service_healthy
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    networks:
      - ajasta-net
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider \
        http://localhost/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local

# Custom network for service communication
networks:
  ajasta-net:
    driver: bridge
    name: ajasta-net
