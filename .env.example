# Ajasta Application Environment Variables
# Copy this file to .env and customize the values for your environment
# 
# Usage:
#   cp .env.example .env
#   # Edit .env with your values
#   ./scripts/deploy-all.zsh --mode local

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# DockerHub Configuration
DOCKERHUB_USER=vladimirryrik

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================

# Database connection settings
POSTGRES_DB=ajastadb
POSTGRES_USER=admin
POSTGRES_PASSWORD=adminpw
POSTGRES_PORT=15432

# For development, you might want to use different credentials:
# POSTGRES_DB=ajastadb_dev
# POSTGRES_USER=dev_user
# POSTGRES_PASSWORD=dev_password

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Backend API Configuration
BACKEND_PORT=8090
JWT_SECRET=change-me-production-secret-key

# Frontend Configuration
FRONTEND_PORT=3000

# JVM Configuration for Backend
JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"

# =============================================================================
# YANDEX CLOUD CONFIGURATION (for VM deployment)
# =============================================================================

# Yandex Cloud Credentials (required for VM deployment)
YC_CLOUD_ID=your-cloud-id-here
YC_FOLDER_ID=your-folder-id-here
YC_ZONE=ru-central1-b

# SSH Configuration for VM access
SSH_USERNAME=ajasta

# VM Resource Names (usually don't need to change)
# YC_ADDRESS_NAME=ajasta-static-ip
# YC_NETWORK_NAME=external-ajasta-network
# YC_SUBNET_NAME=ajasta-external-segment
# YC_SUBNET_RANGE=172.16.17.0/28
# YC_SA_NAME=otus

# =============================================================================
# EMAIL CONFIGURATION (optional)
# =============================================================================

# SMTP Settings for sending emails
MAIL_USERNAME=your-email@example.com
MAIL_PASSWORD=your-app-password

# For development with Mailhog (included in docker-compose.override.yml):
# MAIL_USERNAME=test@ajasta.dev
# MAIL_PASSWORD=
# MAIL_HOST=mailhog
# MAIL_PORT=1025

# =============================================================================
# AWS CONFIGURATION (optional)
# =============================================================================

# AWS S3 Configuration for file uploads
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-s3-bucket-name

# Leave empty to disable AWS features:
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_REGION=
# AWS_S3_BUCKET=

# =============================================================================
# STRIPE CONFIGURATION (optional)
# =============================================================================

# Stripe Payment Processing
STRIPE_PUBLIC_KEY=pk_test_your_stripe_public_key
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key

# For production:
# STRIPE_PUBLIC_KEY=pk_live_your_live_public_key
# STRIPE_SECRET_KEY=sk_live_your_live_secret_key

# Leave empty to disable Stripe features:
# STRIPE_PUBLIC_KEY=
# STRIPE_SECRET_KEY=

# =============================================================================
# DEVELOPMENT-SPECIFIC CONFIGURATION
# =============================================================================

# Spring Boot Profiles (for development)
# SPRING_PROFILES_ACTIVE=dev

# Logging Configuration (for development)
# LOGGING_LEVEL_ROOT=INFO
# LOGGING_LEVEL_COM_AJASTA=DEBUG

# React Development Configuration
# REACT_APP_API_BASE_URL=http://localhost:8090/api
# REACT_APP_ENVIRONMENT=development
# NODE_ENV=development

# =============================================================================
# SECURITY NOTES
# =============================================================================

# IMPORTANT SECURITY CONSIDERATIONS:
#
# 1. JWT_SECRET: Use a strong, random secret for production
#    Generate with: openssl rand -base64 32
#
# 2. Database Passwords: Use strong passwords for production
#    Generate with: openssl rand -base64 16
#
# 3. Never commit this file with real credentials to version control
#    The .env file should be in your .gitignore
#
# 4. For production deployment:
#    - Use environment-specific values
#    - Enable HTTPS/TLS
#    - Configure proper firewall rules
#    - Use managed database services when possible
#
# 5. Yandex Cloud credentials should have minimal required permissions
#    - compute.admin for VM management
#    - vpc.admin for network management
#    - storage.admin for object storage (if used)

# =============================================================================
# QUICK START EXAMPLES
# =============================================================================

# Example 1: Local development with default settings
#   cp .env.example .env
#   ./scripts/deploy-all.zsh --mode local

# Example 2: VM deployment with custom DockerHub user
#   cp .env.example .env
#   # Edit .env and set DOCKERHUB_USER, YC_CLOUD_ID, YC_FOLDER_ID
#   ./scripts/deploy-all.zsh --mode vm --dockerhub-user myusername

# Example 3: Full deployment (both VM and local)
#   cp .env.example .env
#   # Configure all required variables
#   ./scripts/deploy-all.zsh --mode both --clean