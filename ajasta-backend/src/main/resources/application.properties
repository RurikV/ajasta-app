spring.application.name=AjastaApp

# Load local secret files if present (not committed)
# Try multiple locations so it works whether you run from repo root or from the backend module directory.
# Order: module config, repo-root config, repo-root .env, module .env
spring.config.import=optional:file:./config/.env[.properties],optional:file:./config/application-secrets.properties,optional:file:./ajasta-backend/config/.env[.properties],optional:file:./ajasta-backend/config/application-secrets.properties,optional:file:.env[.properties],optional:file:application-secrets.properties

server.port=8090

## MYSQL CONNECTION (example - do not commit real credentials)
#spring.datasource.url=${MYSQL_DB_URL:jdbc:mysql://localhost:3306/ajastadb}
#spring.datasource.username=${MYSQL_DB_USERNAME:}
#spring.datasource.password=${MYSQL_DB_PASSWORD:}
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.ddl-auto=update


## MYSQL PRODUCTION CONNECTION (example - use env vars in deployment)
#spring.datasource.url=${MYSQL_DB_URL:}
#spring.datasource.username=${MYSQL_DB_USERNAME:}
#spring.datasource.password=${MYSQL_DB_PASSWORD:}
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.ddl-auto=none


## POSTGRESQL CONNECTION
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:15432/admin}
spring.datasource.username=${DB_USERNAME:admin}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update


secreteJwtString=${JWT_SECRET:}


## Mail configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Optional: explicitly set From address (defaults to spring.mail.username)
# app.mail.from=${spring.mail.username}

# Note: Gmail App Passwords are 16 characters without spaces. If you paste one with spaces for readability,
# the application will ignore whitespace at runtime.


## AWS CONFIG
aws.s3.region=${AWS_REGION:us-east-2}
aws.s3.bucket=${AWS_S3_BUCKET:ajastaapp-abc}
aws.accessKeyId=${AWS_ACCESS_KEY_ID:}
aws.secretKey=${AWS_SECRET_ACCESS_KEY:}



##PROD REACT FRONTEND
base.payment.link=http://ajastaapp-dev-456.s3-website.us-east-2.amazonaws.com/pay?orderid=
frontend.base.url=http://ajastaapp-dev-456.s3-website.us-east-2.amazonaws.com


##LOCAL REACT FRONTEND
#base.payment.link=http://localhost:3000/pay?orderid=
#frontend.base.url=http://localhost:3000




##STRIP CREDENTIALS
stripe.api.public.key=${STRIPE_PUBLIC_KEY:}
stripe.api.secret.key=${STRIPE_SECRET_KEY:}







# Feature flags to disable removed modules
app.features.menu=${APP_FEATURES_MENU:false}
app.features.cart=${APP_FEATURES_CART:false}
app.features.reviews=${APP_FEATURES_REVIEWS:true}

